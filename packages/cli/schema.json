{
  "type": "object",
  "title": "tramvai.json schema",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "required": [
    "projects"
  ],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "projects": {
      "type": "object",
      "title": "Project configs",
      "minProperties": 1,
      "patternProperties": {
        "^[$a-zA-Z_-][0-9a-zA-Z_$-]*$": {
          "if": {
            "properties": {
              "type": {
                "const": "application"
              }
            }
          },
          "then": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "title": "name of the project",
                "type": "string"
              },
              "root": {
                "title": "path to the root directory relative to the tramvai.json",
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "application"
                ]
              },
              "polyfill": {
                "title": "Path to polyfill file. By default, looks for the `src/polyfill`",
                "type": "string"
              },
              "serverApiDir": {
                "title": "Path to folder with papi handlers",
                "default": "src/api",
                "type": "string"
              },
              "output": {
                "title": "Controls the cli output locations",
                "default": {},
                "type": "object",
                "properties": {
                  "server": {
                    "title": "Path to build assets for server",
                    "default": "dist/server",
                    "type": "string"
                  },
                  "client": {
                    "title": "Path to build assets for client",
                    "default": "dist/client",
                    "type": "string"
                  },
                  "static": {
                    "title": "Path to build static assets",
                    "default": "dist/static",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "modern": {
                "title": "Enable build for modern browsers",
                "default": true,
                "type": "boolean"
              },
              "fileSystemPages": {
                "title": "File-System Routing feature",
                "default": {},
                "type": "object",
                "properties": {
                  "enabled": {
                    "title": "Read pages from file system",
                    "default": false,
                    "type": "boolean"
                  },
                  "routesDir": {
                    "title": "Folder with pages from which static routers are generated",
                    "default": "routes",
                    "anyOf": [
                      {
                        "enum": [
                          false
                        ],
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "pagesDir": {
                    "title": "Folder with components which can be manually added to static routers",
                    "default": "pages",
                    "anyOf": [
                      {
                        "enum": [
                          false
                        ],
                        "type": "boolean"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "splitChunks": {
                "title": "Configure the options on webpack splitChunks",
                "default": {},
                "type": "object",
                "properties": {
                  "mode": {
                    "default": "granularChunks",
                    "enum": [
                      "commonChunk",
                      false,
                      "granularChunks"
                    ]
                  },
                  "granularChunksSplitNumber": {
                    "title": "Move module to shared chunk if used at least as many times in other chunks",
                    "default": 2,
                    "type": "number"
                  },
                  "granularChunksMinSize": {
                    "title": "Minimum shared chunk size in bytes",
                    "default": 20000,
                    "type": "number"
                  },
                  "commonChunkSplitNumber": {
                    "title": "`@deprecated will be removed in next major release` Move module to common chunk if used at least as many times in other chunks",
                    "default": 3,
                    "type": "number"
                  }
                },
                "additionalProperties": false
              },
              "checkAsyncTs": {
                "title": "Configuration for fork-ts-checker-webpack-plugin",
                "default": false,
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "failOnBuild": {
                        "description": "при включении этого флага в build-сборку добавляется проверка типов\nпри невалидных типах сборка падает",
                        "type": "boolean"
                      },
                      "pluginOptions": {
                        "description": "дополнительные опции",
                        "type": "object",
                        "properties": {
                          "async": {
                            "type": "boolean"
                          },
                          "typescript": {
                            "type": "object",
                            "properties": {
                              "memoryLimit": {
                                "type": "number"
                              },
                              "configFile": {
                                "type": "string"
                              },
                              "configOverwrite": {
                                "type": "object",
                                "properties": {
                                  "extends": {
                                    "type": "string"
                                  },
                                  "compilerOptions": {},
                                  "include": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "exclude": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "files": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "references": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string"
                                        },
                                        "prepend": {
                                          "type": "boolean"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "context": {
                                "type": "string"
                              },
                              "build": {
                                "type": "boolean"
                              },
                              "mode": {
                                "enum": [
                                  "readonly",
                                  "write-dts",
                                  "write-references",
                                  "write-tsbuildinfo"
                                ],
                                "type": "string"
                              },
                              "diagnosticOptions": {
                                "type": "object",
                                "properties": {
                                  "syntactic": {
                                    "type": "boolean"
                                  },
                                  "semantic": {
                                    "type": "boolean"
                                  },
                                  "declaration": {
                                    "type": "boolean"
                                  },
                                  "global": {
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "profile": {
                                "type": "boolean"
                              },
                              "typescriptPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "formatter": {
                            "anyOf": [
                              {
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "basic"
                                    ]
                                  },
                                  "pathType": {
                                    "enum": [
                                      "absolute",
                                      "relative"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "codeframe"
                                    ]
                                  },
                                  "pathType": {
                                    "enum": [
                                      "absolute",
                                      "relative"
                                    ],
                                    "type": "string"
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "highlightCode": {
                                        "description": "Syntax highlight the code as JavaScript for terminals. default: false",
                                        "type": "boolean"
                                      },
                                      "linesAbove": {
                                        "description": "The number of lines to show above the error. default: 2",
                                        "type": "number"
                                      },
                                      "linesBelow": {
                                        "description": "The number of lines to show below the error. default: 3",
                                        "type": "number"
                                      },
                                      "forceColor": {
                                        "description": "Forcibly syntax highlight the code as JavaScript (for non-terminals);\noverrides highlightCode.\ndefault: false",
                                        "type": "boolean"
                                      },
                                      "message": {
                                        "description": "Pass in a string to be displayed inline (if possible) next to the\nhighlighted location in the code. If it can't be positioned inline,\nit will be placed above the code frame.\ndefault: nothing",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "enum": [
                                  "basic",
                                  "codeframe"
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "issue": {
                            "type": "object",
                            "properties": {
                              "include": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "file": {
                                        "type": "string"
                                      },
                                      "severity": {
                                        "enum": [
                                          "error",
                                          "warning"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string"
                                            },
                                            "file": {
                                              "type": "string"
                                            },
                                            "severity": {
                                              "enum": [
                                                "error",
                                                "warning"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "exclude": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "code": {
                                        "type": "string"
                                      },
                                      "file": {
                                        "type": "string"
                                      },
                                      "severity": {
                                        "enum": [
                                          "error",
                                          "warning"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "code": {
                                              "type": "string"
                                            },
                                            "file": {
                                              "type": "string"
                                            },
                                            "severity": {
                                              "enum": [
                                                "error",
                                                "warning"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "logger": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "log": {
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "error": {
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "enum": [
                                  "webpack-infrastructure"
                                ],
                                "type": "string"
                              }
                            ]
                          },
                          "devServer": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "externals": {
                "cli_overridable": "",
                "title": "Pass list to Webpack config externals field",
                "default": [],
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "development": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "production": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              },
              "experiments": {
                "title": "Experimental settings",
                "default": {},
                "type": "object",
                "properties": {
                  "serverRunner": {
                    "title": "How to run server build",
                    "default": "process",
                    "enum": [
                      "process",
                      "thread"
                    ],
                    "type": "string"
                  },
                  "webpack": {
                    "title": "experiments configuration for [webpack](https://webpack.js.org/configuration/experiments/)",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "asyncWebAssembly": {
                        "description": "Support WebAssembly as asynchronous EcmaScript Module.",
                        "type": "boolean"
                      },
                      "backCompat": {
                        "description": "Enable backward-compat layer with deprecation warnings for many webpack 4 APIs.",
                        "title": "Enable backward compatibility with webpack previous major versions",
                        "default": false,
                        "type": "boolean"
                      },
                      "cacheUnaffected": {
                        "description": "Enable additional in memory caching of modules that are unchanged and reference only unchanged modules.",
                        "title": "Enable additional in-memory caching of modules which are unchanged and reference only unchanged modules.",
                        "default": true,
                        "type": "boolean"
                      },
                      "futureDefaults": {
                        "description": "Apply defaults of next major version.",
                        "type": "boolean"
                      },
                      "layers": {
                        "description": "Enable module layers.",
                        "type": "boolean"
                      },
                      "outputModule": {
                        "description": "Allow output javascript files as module source type.",
                        "type": "boolean"
                      },
                      "syncWebAssembly": {
                        "description": "Support WebAssembly as synchronous EcmaScript Module (outdated).",
                        "type": "boolean"
                      },
                      "topLevelAwait": {
                        "description": "Allow using top-level-await in EcmaScript Modules.",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "minicss": {
                    "title": "experimental settings for [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin)",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "useImportModule": {
                        "cli_overridable": "",
                        "title": "Use a new webpack API to execute modules instead of child compilers. This improves performance and memory usage a lot.",
                        "default": true,
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "development": {
                                "type": "boolean"
                              },
                              "production": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "transpilation": {
                    "title": "experimental settings for code transpilation",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "loader": {
                        "cli_overridable": "",
                        "title": "specify loader to transpile js-ts code",
                        "default": "babel",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "development": {
                                "enum": [
                                  "babel",
                                  "swc"
                                ],
                                "type": "string"
                              },
                              "production": {
                                "enum": [
                                  "babel",
                                  "swc"
                                ],
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "enum": [
                              "babel",
                              "swc"
                            ],
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "sourceMap": {
                "cli_overridable": "",
                "title": "Enable source maps",
                "default": false,
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "development": {
                        "type": "boolean"
                      },
                      "production": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "boolean"
                  }
                ]
              },
              "excludesPresetEnv": {
                "title": "List of modules to exclude from `@babel/preset-env`",
                "description": "Option doesn't affect build with swc loader",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "threadLoader": {
                "title": "Webpack's thread-loader config",
                "additionalProperties": true,
                "type": "object"
              },
              "define": {
                "title": "Define static variables that should be replaced by name with provided value",
                "default": {},
                "type": "object",
                "properties": {
                  "shared": {
                    "default": {},
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "development": {
                    "default": {},
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "production": {
                    "default": {},
                    "additionalProperties": true,
                    "type": "object"
                  }
                },
                "additionalProperties": false
              },
              "generateDataQaTag": {
                "title": "`@deprecated` will be removed in next major release.",
                "default": false,
                "type": "boolean"
              },
              "enableFillActionNamePlugin": {
                "title": "`@deprecated` will be removed in next major release. Включает использование плагина fill-action-name",
                "default": false,
                "type": "boolean"
              },
              "postcss": {
                "default": {},
                "type": "object",
                "properties": {
                  "config": {
                    "title": "Path to postcss config file. By default, `postcss.config.js` file is used",
                    "type": "string"
                  },
                  "cssLocalIdentName": {
                    "cli_overridable": "",
                    "title": "CSS identifiers build algorithm",
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "development": {
                            "type": "string"
                          },
                          "production": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "assetsConfig": {
                    "title": "Path to postcss config file for assets",
                    "type": "string"
                  },
                  "cssModulePattern": {
                    "title": "Enable CSS modules for all files matching /RegExp/i.test(filename) regexp.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "alias": {
                "title": "`@deprecated` as cli now supports baseUrl and paths from the app's tsconfig.json file.\nJust check or add configuration to your tsconfig file and remove alias from tramvai.json",
                "additionalProperties": true,
                "type": "object"
              },
              "svgo": {
                "title": "svgo-loader options",
                "type": "object",
                "properties": {
                  "plugins": {
                    "title": "svgo plugins",
                    "type": "array",
                    "items": {}
                  }
                },
                "additionalProperties": false
              },
              "imageOptimization": {
                "title": "Settings for image-webpack-loader",
                "type": "object",
                "properties": {
                  "enabled": {
                    "title": "Enable image-webpack-loader",
                    "type": "boolean"
                  },
                  "options": {
                    "title": "Pass options to image-webpack-loader",
                    "additionalProperties": true,
                    "type": "object"
                  }
                },
                "additionalProperties": false
              },
              "transpileOnlyModernLibs": {
                "title": "transpile libs based only on @tinkoff/is-modern-lib",
                "default": true,
                "type": "boolean"
              },
              "webpack": {
                "title": "Webpack specific settings",
                "default": {},
                "type": "object",
                "properties": {
                  "resolveAlias": {
                    "title": "Browser package resolve aliases. E.g. { \"stream\": \"stream-browserify\" }",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "provide": {
                    "title": "Browser packages to provide with ProvidePlugin. E.g. { \"Buffer\": [\"buffer\", \"Buffer\"] }",
                    "additionalProperties": true,
                    "type": "object"
                  }
                },
                "additionalProperties": false
              },
              "dedupe": {
                "title": "Enable DedupePlugin",
                "default": {},
                "type": "object",
                "properties": {
                  "enabled": {
                    "title": "Strategy for DedupePlugin",
                    "default": true,
                    "type": "boolean"
                  },
                  "strategy": {
                    "title": "Strategy for DedupePlugin",
                    "default": "equality",
                    "enum": [
                      "equality",
                      "semver"
                    ],
                    "type": "string"
                  },
                  "ignore": {
                    "title": "Sets ignore to DedupePlugin",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "terser": {
                "title": "terser settings",
                "default": {},
                "type": "object",
                "properties": {
                  "parallel": {
                    "title": "Configuration for enabling parallel compression for terser plugin",
                    "default": true,
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "cssMinimize": {
                "title": "Set minimizer for css",
                "default": "css-minimizer",
                "enum": [
                  "css-minimizer",
                  "csso"
                ],
                "type": "string"
              },
              "hotRefresh": {
                "title": "React hot-refresh",
                "default": {},
                "type": "object",
                "properties": {
                  "enabled": {
                    "title": "Enable react hot-refresh",
                    "default": true,
                    "type": "boolean"
                  },
                  "options": {
                    "title": "Configure react hot-refresh https://github.com/pmmmwh/react-refresh-webpack-plugin#options",
                    "type": "object",
                    "properties": {
                      "overlay": {
                        "anyOf": [
                          {
                            "type": "object",
                            "additionalProperties": false
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "notifications": {
                "title": "Controls build notifications settings during development",
                "default": {},
                "type": "object",
                "properties": {
                  "suppressSuccess": {
                    "title": "Defines when success notifications are shown",
                    "enum": [
                      "always",
                      false,
                      "initial",
                      true
                    ]
                  },
                  "suppressWarning": {
                    "title": "True to suppress the warning notifications, otherwise false",
                    "type": "boolean"
                  },
                  "activateTerminalOnError": {
                    "title": "True to activate (focus) the terminal window when a compilation error occurs",
                    "type": "boolean"
                  },
                  "client": {
                    "type": "object",
                    "properties": {
                      "suppressSuccess": {
                        "title": "Defines when success notifications are shown",
                        "enum": [
                          "always",
                          false,
                          "initial",
                          true
                        ]
                      },
                      "suppressWarning": {
                        "title": "True to suppress the warning notifications, otherwise false",
                        "type": "boolean"
                      },
                      "activateTerminalOnError": {
                        "title": "True to activate (focus) the terminal window when a compilation error occurs",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "server": {
                    "type": "object",
                    "properties": {
                      "suppressSuccess": {
                        "title": "Defines when success notifications are shown",
                        "enum": [
                          "always",
                          false,
                          "initial",
                          true
                        ]
                      },
                      "suppressWarning": {
                        "title": "True to suppress the warning notifications, otherwise false",
                        "type": "boolean"
                      },
                      "activateTerminalOnError": {
                        "title": "True to activate (focus) the terminal window when a compilation error occurs",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "shared": {
                "title": "Specify dependencies that will be shared between application and child-apps",
                "description": "Properly defining that dependencies may greatly reduce filesize of loaded js on the client",
                "default": {},
                "type": "object",
                "properties": {
                  "defaultTramvaiDependencies": {
                    "title": "Should default dependencies list be added to shared list",
                    "description": "It includes the list of commonly used dependencies in the child-apps\nBy default, it is enabled in application in case of",
                    "type": "boolean"
                  },
                  "deps": {
                    "title": "list of the dependencies that will be shared",
                    "default": [],
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "title": "name of the dependency import",
                              "type": "string"
                            },
                            "singleton": {
                              "title": "if dependency is marked as singleton the dependency will be initialized only once and will not be updated",
                              "description": "Do not overuse that feature as it may lead to subtle bugs in case of different versions on different sides",
                              "default": ": false",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "string"
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "required": [
              "name",
              "root",
              "type"
            ]
          },
          "else": {
            "if": {
              "properties": {
                "type": {
                  "const": "module"
                }
              }
            },
            "then": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "name": {
                  "title": "name of the project",
                  "type": "string"
                },
                "root": {
                  "title": "path to the root directory relative to the tramvai.json",
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "module"
                  ]
                },
                "output": {
                  "title": "Path to build module assets",
                  "default": "dist/modules",
                  "type": "string"
                },
                "postcss": {
                  "default": {},
                  "type": "object",
                  "properties": {
                    "config": {
                      "title": "Path to postcss config file. By default, `postcss.config.js` file is used",
                      "type": "string"
                    },
                    "cssLocalIdentName": {
                      "cli_overridable": "",
                      "title": "CSS identifiers build algorithm",
                      "default": "[hash:base64:5]",
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "development": {
                              "type": "string"
                            },
                            "production": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "assetsConfig": {
                      "title": "Path to postcss config file for assets",
                      "type": "string"
                    },
                    "cssModulePattern": {
                      "title": "Enable CSS modules for all files matching /RegExp/i.test(filename) regexp.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sourceMap": {
                  "cli_overridable": "",
                  "title": "Enable source maps",
                  "default": false,
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "development": {
                          "type": "boolean"
                        },
                        "production": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "experiments": {
                  "title": "Change different experimental cli settings",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "webpack": {
                      "title": "experiments configuration for [webpack](https://webpack.js.org/configuration/experiments/)",
                      "default": {},
                      "type": "object",
                      "properties": {
                        "asyncWebAssembly": {
                          "description": "Support WebAssembly as asynchronous EcmaScript Module.",
                          "type": "boolean"
                        },
                        "backCompat": {
                          "description": "Enable backward-compat layer with deprecation warnings for many webpack 4 APIs.",
                          "title": "Enable backward compatibility with webpack previous major versions",
                          "default": false,
                          "type": "boolean"
                        },
                        "cacheUnaffected": {
                          "description": "Enable additional in memory caching of modules that are unchanged and reference only unchanged modules.",
                          "title": "Enable additional in-memory caching of modules which are unchanged and reference only unchanged modules.",
                          "default": true,
                          "type": "boolean"
                        },
                        "futureDefaults": {
                          "description": "Apply defaults of next major version.",
                          "type": "boolean"
                        },
                        "layers": {
                          "description": "Enable module layers.",
                          "type": "boolean"
                        },
                        "outputModule": {
                          "description": "Allow output javascript files as module source type.",
                          "type": "boolean"
                        },
                        "syncWebAssembly": {
                          "description": "Support WebAssembly as synchronous EcmaScript Module (outdated).",
                          "type": "boolean"
                        },
                        "topLevelAwait": {
                          "description": "Allow using top-level-await in EcmaScript Modules.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "minicss": {
                      "title": "experimental settings for [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin)",
                      "default": {},
                      "type": "object",
                      "properties": {
                        "useImportModule": {
                          "cli_overridable": "",
                          "title": "Use a new webpack API to execute modules instead of child compilers. This improves performance and memory usage a lot.",
                          "default": true,
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "development": {
                                  "type": "boolean"
                                },
                                "production": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "transpilation": {
                      "title": "experimental settings for code transpilation",
                      "default": {},
                      "type": "object",
                      "properties": {
                        "loader": {
                          "cli_overridable": "",
                          "title": "specify loader to transpile js-ts code",
                          "default": "babel",
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "development": {
                                  "enum": [
                                    "babel",
                                    "swc"
                                  ],
                                  "type": "string"
                                },
                                "production": {
                                  "enum": [
                                    "babel",
                                    "swc"
                                  ],
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "enum": [
                                "babel",
                                "swc"
                              ],
                              "type": "string"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "excludesPresetEnv": {
                  "title": "List of modules to exclude from `@babel/preset-env`",
                  "description": "Option doesn't affect build with swc loader",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "threadLoader": {
                  "title": "Webpack's thread-loader config",
                  "additionalProperties": true,
                  "type": "object"
                },
                "define": {
                  "title": "Define static variables that should be replaced by name with provided value",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "shared": {
                      "default": {},
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "development": {
                      "default": {},
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "production": {
                      "default": {},
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "additionalProperties": false
                },
                "generateDataQaTag": {
                  "title": "`@deprecated` will be removed in next major release.",
                  "default": false,
                  "type": "boolean"
                },
                "enableFillActionNamePlugin": {
                  "title": "`@deprecated` will be removed in next major release. Включает использование плагина fill-action-name",
                  "default": false,
                  "type": "boolean"
                },
                "alias": {
                  "title": "`@deprecated` as cli now supports baseUrl and paths from the app's tsconfig.json file.\nJust check or add configuration to your tsconfig file and remove alias from tramvai.json",
                  "additionalProperties": true,
                  "type": "object"
                },
                "svgo": {
                  "title": "svgo-loader options",
                  "type": "object",
                  "properties": {
                    "plugins": {
                      "title": "svgo plugins",
                      "type": "array",
                      "items": {}
                    }
                  },
                  "additionalProperties": false
                },
                "imageOptimization": {
                  "title": "Settings for image-webpack-loader",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "title": "Enable image-webpack-loader",
                      "type": "boolean"
                    },
                    "options": {
                      "title": "Pass options to image-webpack-loader",
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "additionalProperties": false
                },
                "transpileOnlyModernLibs": {
                  "title": "transpile libs based only on @tinkoff/is-modern-lib",
                  "default": true,
                  "type": "boolean"
                },
                "webpack": {
                  "title": "Webpack specific settings",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "resolveAlias": {
                      "title": "Browser package resolve aliases. E.g. { \"stream\": \"stream-browserify\" }",
                      "additionalProperties": true,
                      "type": "object"
                    },
                    "provide": {
                      "title": "Browser packages to provide with ProvidePlugin. E.g. { \"Buffer\": [\"buffer\", \"Buffer\"] }",
                      "additionalProperties": true,
                      "type": "object"
                    }
                  },
                  "additionalProperties": false
                },
                "dedupe": {
                  "title": "Enable DedupePlugin",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "title": "Strategy for DedupePlugin",
                      "default": true,
                      "type": "boolean"
                    },
                    "strategy": {
                      "title": "Strategy for DedupePlugin",
                      "default": "equality",
                      "enum": [
                        "equality",
                        "semver"
                      ],
                      "type": "string"
                    },
                    "ignore": {
                      "title": "Sets ignore to DedupePlugin",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "terser": {
                  "title": "terser settings",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "parallel": {
                      "title": "Configuration for enabling parallel compression for terser plugin",
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "cssMinimize": {
                  "title": "Set minimizer for css",
                  "default": "css-minimizer",
                  "enum": [
                    "css-minimizer",
                    "csso"
                  ],
                  "type": "string"
                },
                "hotRefresh": {
                  "title": "React hot-refresh",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "title": "Enable react hot-refresh",
                      "default": true,
                      "type": "boolean"
                    },
                    "options": {
                      "title": "Configure react hot-refresh https://github.com/pmmmwh/react-refresh-webpack-plugin#options",
                      "type": "object",
                      "properties": {
                        "overlay": {
                          "anyOf": [
                            {
                              "type": "object",
                              "additionalProperties": false
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "notifications": {
                  "title": "Controls build notifications settings during development",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "suppressSuccess": {
                      "title": "Defines when success notifications are shown",
                      "enum": [
                        "always",
                        false,
                        "initial",
                        true
                      ]
                    },
                    "suppressWarning": {
                      "title": "True to suppress the warning notifications, otherwise false",
                      "type": "boolean"
                    },
                    "activateTerminalOnError": {
                      "title": "True to activate (focus) the terminal window when a compilation error occurs",
                      "type": "boolean"
                    },
                    "client": {
                      "type": "object",
                      "properties": {
                        "suppressSuccess": {
                          "title": "Defines when success notifications are shown",
                          "enum": [
                            "always",
                            false,
                            "initial",
                            true
                          ]
                        },
                        "suppressWarning": {
                          "title": "True to suppress the warning notifications, otherwise false",
                          "type": "boolean"
                        },
                        "activateTerminalOnError": {
                          "title": "True to activate (focus) the terminal window when a compilation error occurs",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "type": "object",
                      "properties": {
                        "suppressSuccess": {
                          "title": "Defines when success notifications are shown",
                          "enum": [
                            "always",
                            false,
                            "initial",
                            true
                          ]
                        },
                        "suppressWarning": {
                          "title": "True to suppress the warning notifications, otherwise false",
                          "type": "boolean"
                        },
                        "activateTerminalOnError": {
                          "title": "True to activate (focus) the terminal window when a compilation error occurs",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "shared": {
                  "title": "Specify dependencies that will be shared between application and child-apps",
                  "description": "Properly defining that dependencies may greatly reduce filesize of loaded js on the client",
                  "default": {},
                  "type": "object",
                  "properties": {
                    "defaultTramvaiDependencies": {
                      "title": "Should default dependencies list be added to shared list",
                      "description": "It includes the list of commonly used dependencies in the child-apps\nBy default, it is enabled in application in case of",
                      "type": "boolean"
                    },
                    "deps": {
                      "title": "list of the dependencies that will be shared",
                      "default": [],
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "name of the dependency import",
                                "type": "string"
                              },
                              "singleton": {
                                "title": "if dependency is marked as singleton the dependency will be initialized only once and will not be updated",
                                "description": "Do not overuse that feature as it may lead to subtle bugs in case of different versions on different sides",
                                "default": ": false",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "string"
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "required": [
                "name",
                "root",
                "type"
              ]
            },
            "else": {
              "if": {
                "properties": {
                  "type": {
                    "const": "child-app"
                  }
                }
              },
              "then": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "name": {
                    "title": "name of the project",
                    "type": "string"
                  },
                  "root": {
                    "title": "path to the root directory relative to the tramvai.json",
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "child-app"
                    ]
                  },
                  "output": {
                    "title": "Path to build module assets",
                    "default": "dist/child-app",
                    "type": "string"
                  },
                  "postcss": {
                    "default": {},
                    "type": "object",
                    "properties": {
                      "config": {
                        "title": "Path to postcss config file. By default, `postcss.config.js` file is used",
                        "type": "string"
                      },
                      "cssLocalIdentName": {
                        "cli_overridable": "",
                        "title": "CSS identifiers build algorithm",
                        "default": "[hash:base64:5]",
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "development": {
                                "type": "string"
                              },
                              "production": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "assetsConfig": {
                        "title": "Path to postcss config file for assets",
                        "type": "string"
                      },
                      "cssModulePattern": {
                        "title": "Enable CSS modules for all files matching /RegExp/i.test(filename) regexp.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "sourceMap": {
                    "cli_overridable": "",
                    "title": "Enable source maps",
                    "default": false,
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "development": {
                            "type": "boolean"
                          },
                          "production": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  },
                  "experiments": {
                    "title": "Change different experimental cli settings",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "webpack": {
                        "title": "experiments configuration for [webpack](https://webpack.js.org/configuration/experiments/)",
                        "default": {},
                        "type": "object",
                        "properties": {
                          "asyncWebAssembly": {
                            "description": "Support WebAssembly as asynchronous EcmaScript Module.",
                            "type": "boolean"
                          },
                          "backCompat": {
                            "description": "Enable backward-compat layer with deprecation warnings for many webpack 4 APIs.",
                            "title": "Enable backward compatibility with webpack previous major versions",
                            "default": false,
                            "type": "boolean"
                          },
                          "cacheUnaffected": {
                            "description": "Enable additional in memory caching of modules that are unchanged and reference only unchanged modules.",
                            "title": "Enable additional in-memory caching of modules which are unchanged and reference only unchanged modules.",
                            "default": true,
                            "type": "boolean"
                          },
                          "futureDefaults": {
                            "description": "Apply defaults of next major version.",
                            "type": "boolean"
                          },
                          "layers": {
                            "description": "Enable module layers.",
                            "type": "boolean"
                          },
                          "outputModule": {
                            "description": "Allow output javascript files as module source type.",
                            "type": "boolean"
                          },
                          "syncWebAssembly": {
                            "description": "Support WebAssembly as synchronous EcmaScript Module (outdated).",
                            "type": "boolean"
                          },
                          "topLevelAwait": {
                            "description": "Allow using top-level-await in EcmaScript Modules.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "minicss": {
                        "title": "experimental settings for [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin)",
                        "default": {},
                        "type": "object",
                        "properties": {
                          "useImportModule": {
                            "cli_overridable": "",
                            "title": "Use a new webpack API to execute modules instead of child compilers. This improves performance and memory usage a lot.",
                            "default": true,
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "development": {
                                    "type": "boolean"
                                  },
                                  "production": {
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "transpilation": {
                        "title": "experimental settings for code transpilation",
                        "default": {},
                        "type": "object",
                        "properties": {
                          "loader": {
                            "cli_overridable": "",
                            "title": "specify loader to transpile js-ts code",
                            "default": "babel",
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "development": {
                                    "enum": [
                                      "babel",
                                      "swc"
                                    ],
                                    "type": "string"
                                  },
                                  "production": {
                                    "enum": [
                                      "babel",
                                      "swc"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "enum": [
                                  "babel",
                                  "swc"
                                ],
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "excludesPresetEnv": {
                    "title": "List of modules to exclude from `@babel/preset-env`",
                    "description": "Option doesn't affect build with swc loader",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "threadLoader": {
                    "title": "Webpack's thread-loader config",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "define": {
                    "title": "Define static variables that should be replaced by name with provided value",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "shared": {
                        "default": {},
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "development": {
                        "default": {},
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "production": {
                        "default": {},
                        "additionalProperties": true,
                        "type": "object"
                      }
                    },
                    "additionalProperties": false
                  },
                  "generateDataQaTag": {
                    "title": "`@deprecated` will be removed in next major release.",
                    "default": false,
                    "type": "boolean"
                  },
                  "enableFillActionNamePlugin": {
                    "title": "`@deprecated` will be removed in next major release. Включает использование плагина fill-action-name",
                    "default": false,
                    "type": "boolean"
                  },
                  "alias": {
                    "title": "`@deprecated` as cli now supports baseUrl and paths from the app's tsconfig.json file.\nJust check or add configuration to your tsconfig file and remove alias from tramvai.json",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "svgo": {
                    "title": "svgo-loader options",
                    "type": "object",
                    "properties": {
                      "plugins": {
                        "title": "svgo plugins",
                        "type": "array",
                        "items": {}
                      }
                    },
                    "additionalProperties": false
                  },
                  "imageOptimization": {
                    "title": "Settings for image-webpack-loader",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "title": "Enable image-webpack-loader",
                        "type": "boolean"
                      },
                      "options": {
                        "title": "Pass options to image-webpack-loader",
                        "additionalProperties": true,
                        "type": "object"
                      }
                    },
                    "additionalProperties": false
                  },
                  "transpileOnlyModernLibs": {
                    "title": "transpile libs based only on @tinkoff/is-modern-lib",
                    "default": true,
                    "type": "boolean"
                  },
                  "webpack": {
                    "title": "Webpack specific settings",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "resolveAlias": {
                        "title": "Browser package resolve aliases. E.g. { \"stream\": \"stream-browserify\" }",
                        "additionalProperties": true,
                        "type": "object"
                      },
                      "provide": {
                        "title": "Browser packages to provide with ProvidePlugin. E.g. { \"Buffer\": [\"buffer\", \"Buffer\"] }",
                        "additionalProperties": true,
                        "type": "object"
                      }
                    },
                    "additionalProperties": false
                  },
                  "dedupe": {
                    "title": "Enable DedupePlugin",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "title": "Strategy for DedupePlugin",
                        "default": true,
                        "type": "boolean"
                      },
                      "strategy": {
                        "title": "Strategy for DedupePlugin",
                        "default": "equality",
                        "enum": [
                          "equality",
                          "semver"
                        ],
                        "type": "string"
                      },
                      "ignore": {
                        "title": "Sets ignore to DedupePlugin",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "terser": {
                    "title": "terser settings",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "parallel": {
                        "title": "Configuration for enabling parallel compression for terser plugin",
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "cssMinimize": {
                    "title": "Set minimizer for css",
                    "default": "css-minimizer",
                    "enum": [
                      "css-minimizer",
                      "csso"
                    ],
                    "type": "string"
                  },
                  "hotRefresh": {
                    "title": "React hot-refresh",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "title": "Enable react hot-refresh",
                        "default": true,
                        "type": "boolean"
                      },
                      "options": {
                        "title": "Configure react hot-refresh https://github.com/pmmmwh/react-refresh-webpack-plugin#options",
                        "type": "object",
                        "properties": {
                          "overlay": {
                            "anyOf": [
                              {
                                "type": "object",
                                "additionalProperties": false
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "notifications": {
                    "title": "Controls build notifications settings during development",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "suppressSuccess": {
                        "title": "Defines when success notifications are shown",
                        "enum": [
                          "always",
                          false,
                          "initial",
                          true
                        ]
                      },
                      "suppressWarning": {
                        "title": "True to suppress the warning notifications, otherwise false",
                        "type": "boolean"
                      },
                      "activateTerminalOnError": {
                        "title": "True to activate (focus) the terminal window when a compilation error occurs",
                        "type": "boolean"
                      },
                      "client": {
                        "type": "object",
                        "properties": {
                          "suppressSuccess": {
                            "title": "Defines when success notifications are shown",
                            "enum": [
                              "always",
                              false,
                              "initial",
                              true
                            ]
                          },
                          "suppressWarning": {
                            "title": "True to suppress the warning notifications, otherwise false",
                            "type": "boolean"
                          },
                          "activateTerminalOnError": {
                            "title": "True to activate (focus) the terminal window when a compilation error occurs",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "server": {
                        "type": "object",
                        "properties": {
                          "suppressSuccess": {
                            "title": "Defines when success notifications are shown",
                            "enum": [
                              "always",
                              false,
                              "initial",
                              true
                            ]
                          },
                          "suppressWarning": {
                            "title": "True to suppress the warning notifications, otherwise false",
                            "type": "boolean"
                          },
                          "activateTerminalOnError": {
                            "title": "True to activate (focus) the terminal window when a compilation error occurs",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "shared": {
                    "title": "Specify dependencies that will be shared between application and child-apps",
                    "description": "Properly defining that dependencies may greatly reduce filesize of loaded js on the client",
                    "default": {},
                    "type": "object",
                    "properties": {
                      "defaultTramvaiDependencies": {
                        "title": "Should default dependencies list be added to shared list",
                        "description": "It includes the list of commonly used dependencies in the child-apps\nBy default, it is enabled in application in case of",
                        "type": "boolean"
                      },
                      "deps": {
                        "title": "list of the dependencies that will be shared",
                        "default": [],
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "name of the dependency import",
                                  "type": "string"
                                },
                                "singleton": {
                                  "title": "if dependency is marked as singleton the dependency will be initialized only once and will not be updated",
                                  "description": "Do not overuse that feature as it may lead to subtle bugs in case of different versions on different sides",
                                  "default": ": false",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "string"
                            }
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "root",
                  "type"
                ]
              },
              "else": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "name": {
                    "title": "Package name",
                    "type": "string"
                  },
                  "root": {
                    "title": "Package root folder (need to contain `package.json`, `tsconfig.json` and `src` folder with source code)",
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "package"
                    ]
                  }
                },
                "required": [
                  "name",
                  "root",
                  "type"
                ]
              }
            }
          }
        }
      },
      "default": {}
    },
    "migrations": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sourcePattern": {
          "title": "do migrations only for files that match a glob pattern",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignorePattern": {
          "title": "skip migrations for files that match a glob pattern",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}